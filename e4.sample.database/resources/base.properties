#
# Copyright (C) 2012 Goulwen Le Fur
# 
# This program is free software; you can redistribute it and/or 
# modify it under the terms of the GNU General Public License 
# as published by the Free Software Foundation; either version 3 
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along 
# with this program; if not, see <http://www.gnu.org/licenses>.

projectName=acceleo
baseImports=sample

# Path to the main java source files root, relative to the folder
# where files will be generated. Must start with a slash "/"
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.main.java=/src
#path.to.main.java=/src/main/java

# Path to the test java source files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.java=/src
#path.to.test.java=/src/test/java

# Path to the main resource files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.main.resources=/src
#path.to.main.resources=/src/main/resources

# Path to the test resource files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.resources=/src
#path.to.test.resources=/src/test/resources

# If you want packages to look like this:
# com.mycompany.myproject.currentpackage.business, use "true".
# Use "false" (or anything else than "true") if you want packages
# to be arranged technically rather than functionally, like this:
# com.mycompany.myproject.business.currentpackage
use.functional.disposition=false

path.to.main.webapp=/WebContent
#path.to.main.webapp=/src/main/webapp/
ui.actions.package=actions
ui.forms.package=forms
#forms.suffix = Form
# Package where entities will be generated
ui.package=ui

# Package that contains the DaoException class
daoException.package=org.obeonetwork.demo.fwk.dao.exception

# Name of the DaoException class
daoException.name=DaoException

# If DAO throw an exception
dao.exception.strategy=


default.pk.type=String

# Defautt generator
#hibernate.generator.class=uuid

# use of spring
linkage.strategy=spring

useSoaPackage=yes
soa.package=

#generate tests
#generate.tests=yes